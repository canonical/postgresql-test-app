# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '.jujuignore'
      - 'LICENSE'
      - '**.md'
      - .github/renovate.json5
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:

jobs:
  lint:
    name: Lint
    uses: canonical/data-platform-workflows/.github/workflows/lint.yaml@v6.2.0

  build:
    name: Build charm
    uses: canonical/data-platform-workflows/.github/workflows/build_charms_with_cache.yaml@add-poetry-plugin-export 
    permissions:
      actions: write  # Needed to manage GitHub Actions cache

  gh-hosted-integration-k8s-test:
    strategy:
      fail-fast: false
      matrix:
        tox-environment:
          - integration-k8s-smoke
        juju-snap-channel:  ["2.9/stable", "3.1/stable"]
        include:
          - juju-snap-channel: "3.1/stable"
            agent-version: "3.1.6"
            libjuju-version:  "3.2.2"
          - juju-snap-channel: "2.9/stable"
            agent-version: "2.9.45"
            libjuju-version:  "2.9.45.0"
    name: ${{ matrix.juju-snap-channel }} - (GH hosted) ${{ matrix.tox-environment }}
    needs:
      - lint
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: "1.28-strict/stable"
          bootstrap-options: "--agent-version ${{ matrix.agent-version }}"
          juju-channel: ${{ matrix.juju-snap-channel }}
      - name: Update python-libjuju version
        if: ${{ matrix.juju-snap-channel == '2.9/stable' }}
        run: poetry add --lock --group integration juju@'${{ matrix.libjuju-version }}'
      - name: Download packed charm(s)
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact-name }}
      - name: Select test stability level
        id: select-test-stability
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> "$GITHUB_OUTPUT"
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> "$GITHUB_OUTPUT"
          fi
      - name: Run integration tests
        run: tox run -e ${{ matrix.tox-environment }} -- -m '${{ steps.select-test-stability.outputs.mark_expression }}' --keep-models

  gh-hosted-integration-lxd-test:
    strategy:
      fail-fast: false
      matrix:
        tox-environment:
          - integration-lxd-smoke
        juju-snap-channel:  ["2.9/stable", "3.1/stable"]
        include:
          - juju-snap-channel: "3.1/stable"
            agent-version: "3.1.6"
            libjuju-version:  "3.2.2"
          - juju-snap-channel: "2.9/stable"
            agent-version: "2.9.45"
            libjuju-version:  "2.9.45.0"
    name: ${{ matrix.juju-snap-channel }} - (GH hosted) ${{ matrix.tox-environment }}
    needs:
      - lint
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
          bootstrap-options: "--agent-version ${{ matrix.agent-version }}"
          juju-channel: ${{ matrix.juju-snap-channel }}
      - name: Update python-libjuju version
        if: ${{ matrix.juju-snap-channel == '2.9/stable' }}
        run: poetry add --lock --group integration juju@'${{ matrix.libjuju-version }}'
      - name: Download packed charm(s)
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact-name }}
      - name: Select test stability level
        id: select-test-stability
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> "$GITHUB_OUTPUT"
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> "$GITHUB_OUTPUT"
          fi
      - name: Run integration tests
        run: tox run -e ${{ matrix.tox-environment }} -- -m '${{ steps.select-test-stability.outputs.mark_expression }}' --keep-models
